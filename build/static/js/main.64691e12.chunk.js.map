{"version":3,"sources":["components/PersonalInfo/PersonalInfoStyled.js","components/PersonalInfo/PersonalInfo.js","components/Work/WorkStyled.js","components/Work/Work.js","components/Contact/ContactStyled.js","components/Contact/Contact.js","components/Navbar/NavbarStyled.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["PersonalInfoWrapper","styled","div","Title","h1","Image","LinkContact","a","MyWork","PersonalInfo","id","src","alt","href","target","activeClass","to","spy","smooth","duration","WorkWrapper","Project","Button","Content","ProjectTitle","h3","ProjectImg","Description","p","Tools","Work","ContactWrapper","Link","Contact","Menu","Logo","Navbar","Wrapper","section","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64691e12.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const PersonalInfoWrapper = styled.div`\n    padding:60px 0 150px;\n    margin: 0 auto;\n    background-color: #100772;\n    text-align: center;\n    color: #fff;  \n    @media screen and (max-width: 768px) {\n      padding:32px 24px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin: 8px auto;\n  max-width: 500px;\n  \n`;\n\nexport const Image = styled.div`\n  & img {\n    width: 200px;\n    height: 200px;\n  }\n`;\n\nexport const LinkContact = styled.a`\n  text-decoration: none;\n  color: #fff;\n  font-size: 12px;\n  margin: 16px 16px;\n  display:inline-block;\n  &:hover {\n    color:  #008bf8;\n  }\n  }\n`;\n\n\nexport const MyWork = styled.div`\n    & a {\n      display:block;  \n      margin: 32px auto;\n      padding:16px 40px;\n      width: 100px;\n      border: 1px solid #fff;    \n      border-radius: 8px;\n      cursor: pointer;\n    }\n`;","import React from \"react\";\nimport { PersonalInfoWrapper, Title, Image, LinkContact, MyWork } from \"./PersonalInfoStyled\";\nimport { Link } from 'react-scroll';\n\nfunction PersonalInfo() {\n  return (\n    <PersonalInfoWrapper id=\"Home\">\n      <Image>\n        <img src=\"/images/profile_rnd.png\" alt=\"Profile\" />\n      </Image>\n      <Title>Hi, I am Muhammad Usman, a frontend developer with a passion for UX and clean code</Title>\n      <LinkContact\n        href=\"https://www.linkedin.com/in/muhammad-usman-78491149/\"\n        target=\"_blank\"\n      >\n        LinkedIn\n      </LinkContact>\n      <LinkContact href=\"https://github.com/MuhammadUsmanMushtaq\" target=\"_blank\">\n        GitHub\n      </LinkContact>\n      <LinkContact href=\"mailto: usman820901@gmail.com\" target=\"_blank\">\n        Email\n      </LinkContact>\n      <MyWork>\n        <Link activeClass=\"active\" to=\"Work\" spy={true} smooth={true} duration={1000}>\n          My work\n        </Link>\n      </MyWork>\n    </PersonalInfoWrapper>\n  );\n}\n\nexport default PersonalInfo;\n","import styled from \"styled-components\";\n\nexport const WorkWrapper = styled.div`\n  padding: 84px 0;\n  display:flex;\n  flex-wrap: wrap;\n  justify-content: center;\n   @media screen and (max-width: 768px) {\n    padding: 8px;\n  }\n`;\n\nexport const Project = styled.div`\n\n  width:400px;\n  margin: 32px;\n  background: #edf5fc;\n  padding: 24px;\n  font-size: 18px;\n  border-radius: 16px;\n  &:hover img {\n    transform: scale(1.04, 1.04);\n  }\n  &:hover a {\n    color: #008bf8;\n  }\n  @media screen and (max-width: 768px) {\n    padding:16px;\n    width:100%;\n    margin:16px 0;\n  }\n`;\n\nexport const Button = styled.a`\n  margin-bottom: 8px;\n  display: block;\n  font-weight: 600;\n  font-size: 18px;\n  color: #000;\n  text-decoration: none;\n  transition: all 0.25s ease-in-out;\n`;\n\nexport const Content = styled.div`\n  font-size: 18px;\n  padding: 16px 0;\n\n  @media screen and (max-width: 800px) {\n    width: 100%;\n    margin: 0;\n  }\n`;\nexport const ProjectTitle = styled.h3`\n  margin: 0;\n  margin-bottom: 8px;\n  padding: 0;\n`;\n\nexport const ProjectImg = styled.div`\n  border-radius: 6px;\n  // padding: 48px 120px;\n  & img {\n    width: 100%;\n    height: 100%;\n    border-radius: 6px;\n    transition: all 0.25s ease-in-out;\n  }\n  @media screen and (max-width: 800px) {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 18px;\n  margin: 0;\n`;\n\nexport const Tools = styled.p`\n  font-size: 18px;\n  font-style: italic;\n`;\n","import React from \"react\";\nimport {\n  WorkWrapper,\n  Project,\n  Content,\n  Tools,\n  Description,\n  ProjectImg,\n  Button,\n  ProjectTitle,\n} from \"./WorkStyled\";\n\nfunction Work() {\n  return (\n    <WorkWrapper id=\"Work\">\n      <Project>\n        <ProjectImg>\n          <img src=\"images/starwars_swapi2.png\" alt=\"starwars_SWAPI\" />\n        </ProjectImg>\n        <Content>\n          <ProjectTitle>Starwars character search</ProjectTitle>\n          <Description>\n           This project is about searching star wars characters using SWAPI API.\n          </Description>\n          <Tools>React, styled components  </Tools>\n\n          <Button\n            href=\"https://github.com/MuhammadUsmanMushtaq/starWars-SWAPI\" target=\"_blank\"\n          >\n            Link to GitHub &#10132;\n          </Button>\n          <Button\n            href=\"https://starwars-swapi-usman.netlify.app/\" target=\"_blank\"\n          >\n            Link to app &#10132;\n          </Button>\n        </Content>\n    </Project>\n      <Project>\n        <ProjectImg>\n          <img src=\"images/kyh_page.png\" alt=\"KYH landing page\" />\n        </ProjectImg>\n        <Content>\n          <ProjectTitle>KYH Course Landing Page Redesign</ProjectTitle>\n          <Description>\n            School project to redesign the landing page of Front-end program at\n            KYH.\n          </Description>\n          <Tools>HTML5, CSS, Vanilla JavaScript</Tools>\n          <Button\n            href=\"https://github.com/MuhammadUsmanMushtaq/frontend_kyh_landing_page\" target=\"_blank\"\n          >\n            Link to GitHub &#10132;\n          </Button>\n          <Button\n            href=\"https://muhammadusmanmushtaq.github.io/frontend_kyh_landing_page/\"\n            target=\"_blank\"\n          >\n            Link to site &#10132;\n          </Button>\n        </Content>\n      </Project>\n      <Project>\n        <ProjectImg>\n          <img src=\"images/tp_easyweb.png\" alt=\"Easyweb site\" />\n        </ProjectImg>\n        <Content>\n          <ProjectTitle>Easyweb by Sphinxly</ProjectTitle>\n          <Description>\n            A school team project for Easyweb by Sphinxly.\n          </Description>\n          <Tools>Next.js, styled components</Tools>\n          <Button\n            href=\"https://github.com/NataliaWiman/fe19tp3_easyweb\"\n            target=\"_blank\"\n          >\n            Link to GitHub &#10132;\n          </Button>\n          <Button href=\"https://fe19tp3-easyweb.now.sh/\" target=\"_blank\">\n            Link to app &#10132;\n          </Button>\n        </Content>\n      </Project>\n      <Project>\n         <ProjectImg>\n          <img src=\"images/weather_app.png\" alt=\"Weather app\" />\n        </ProjectImg>\n        <Content>\n          <ProjectTitle>Weather App</ProjectTitle>\n          <Description>A simple weather application.</Description>\n          <Tools>HTML5, CSS, Vanilla JavaScript</Tools>\n          <Button\n            href=\"https://github.com/MuhammadUsmanMushtaq/weatherapp\"\n            target=\"_blank\"\n          >\n            Link to GitHub &#10132;\n          </Button>\n        </Content>\n      </Project>\n      <Project>\n        <ProjectImg>\n          <img src=\"images/tp_nutrition.png\" alt=\"Nutrition app\" />\n        </ProjectImg>\n        <Content>\n          <ProjectTitle>B-E-V Nutrition tracker</ProjectTitle>\n          <Description>\n            School team project to create a nutrition tracker application using\n            data from an external API.\n          </Description>\n          <Tools>React, styled componenets, chart.js </Tools>\n          <Button href=\"https://github.com/AD757/fe19tp2_lemon\" target=\"_blank\">\n            Link to GitHub &#10132;\n          </Button>\n        </Content>\n      </Project>\n      <Project>\n        <ProjectImg>\n          <img src=\"images/tp_note.png\" alt=\"Note app\" />\n        </ProjectImg>\n        <Content>\n          <ProjectTitle>Quire Note Taking App</ProjectTitle>\n          <Description>\n            School team project to create a note taking application.\n          </Description>\n          <Tools>HTML5, CSS, Vanilla JavaScript </Tools>\n          <Button\n            href=\"https://github.com/AD757/fe19tp1_TeamStaple\"\n            target=\"_blank\"\n          >\n            Link to GitHub &#10132;\n          </Button>\n        </Content>\n      </Project>\n      <Project>\n        <ProjectImg>\n          <img src=\"images/EuBike.png\" alt=\"EU-bikes prototype\" />\n        </ProjectImg>\n        <Content>\n          <ProjectTitle>UX Review for EU-Bikes</ProjectTitle>\n          <Description>\n            The main aim of this project is to analyze the user experience of\n            the EU bike service and to recommend improvements to satisfy both\n            the user goals and the business goals.\n          </Description>\n          <Tools>Figma, Photoshop </Tools>\n          <Button\n            href=\"https://www.figma.com/proto/k60XBI2Tr0mefJXT2Q60jw/EU-BIKE?node-id=1%3A2&viewport=444%2C412%2C0.5&scaling=scale-down\"\n            target=\"_blank\"\n          >\n            Link to prototype &#10132;\n          </Button>\n        </Content>\n      </Project>\n   </WorkWrapper>\n  );\n}\n\nexport default Work;\n","import styled from \"styled-components\";\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 16px 16px;\n  border-top: 1px solid #f4f4f4;\n`;\n\nexport const Link = styled.a`\n  padding: 0 8px;\n  text-decoration: none;\n  color: #000;\n  font-size: 12px;\n  &:hover {\n    color:  #008bf8;\n  }\n  }\n`;\n","import React from \"react\";\nimport { ContactWrapper, Link } from \"./ContactStyled\";\n\nfunction Contact() {\n  return (\n    <ContactWrapper>\n      <Link\n        href=\"https://www.linkedin.com/in/muhammad-usman-78491149/\"\n        target=\"_blank\"\n      >\n        LinkedIn\n      </Link>\n      <Link href=\"https://github.com/MuhammadUsmanMushtaq\" target=\"_blank\">\n        GitHub\n      </Link>\n      <Link href=\"mailto: usman820901@gmail.com\" target=\"_blank\">\n        Email\n      </Link>\n    </ContactWrapper>\n  );\n}\n\nexport default Contact;\n","import styled from \"styled-components\";\n\nexport const Menu = styled.div`\n  display: flex;\n  padding: 16px 16px;\n  // position: fixed;\n  align-items:center;\n  z-index:100;\n  right:0;\n  top:0;\n  left:0;\n  background-color: #100772;\n  a {\n    color:#fff;\n    padding:0 16px; \n    cursor:pointer;\n  }\n`;\n\nexport const Logo = styled.div`\n  width:90px;\n  height:90px;\n  & img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\n\nexport const Links = styled.div`\n  flex:1;\n  text-align: right;\n`;\n\nexport const Link = styled.a`\n  padding: 0 8px;\n  margin: 0 32px;\n  text-decoration: none;\n  color: #000;\n  text-transform: uppercase;\n  font-size: 14px;\n  &:hover {\n    color: red;\n  }\n`;\n","import React from \"react\";\nimport { Menu, Logo } from \"./NavbarStyled\";\n\n\nfunction Navbar() {\n  return (\n    <Menu>\n      <Logo>\n      <img src=\"images/logo.png\" alt=\"KYH landing page\" />\n      </Logo>\n      {/* <Links>\n        <Link activeClass=\"active\" to=\"Home\" spy={true} smooth={true} duration={1000}>\n          Home\n        </Link>\n        <Link activeClass=\"active\" to=\"Skills\" spy={true} smooth={true} duration={1000}>\n          Skills\n        </Link>\n        <Link activeClass=\"active\" to=\"Work\" spy={true} smooth={true} duration={1000}>\n          Work\n        </Link>\n        </Links> */}\n    </Menu>\n  );\n}\nexport default Navbar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PersonalInfo from \"./components/PersonalInfo/PersonalInfo\";\nimport Work from \"./components/Work/Work\";\nimport Contact from \"./components/Contact/Contact\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport \"./App.css\";\n\nconst Wrapper = styled.section`\n  // padding: 16px;\n  // margin: 0 auto;\n  // max-width: 1200px;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Navbar/>\n      <PersonalInfo />\n      <Work />\n      <Contact />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}